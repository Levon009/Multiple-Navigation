<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission
        android:name="android.permission.WRITE_EXTERNAL_STORAGE"
        tools:ignore="ScopedStorage" />
    <uses-permission
        android:name="android.permission.READ_EXTERNAL_STORAGE"
        tools:ignore="ScopedStorage" />
    <uses-permission android:name="android.permission.READ_CONTACTS" />
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
    <uses-permission
        android:name="android.permission.CAMERA"
        tools:ignore="PermissionImpliesUnsupportedChromeOsHardware" />
    <uses-permission
        android:name="android.permission.CALL_PHONE"
        tools:ignore="PermissionImpliesUnsupportedChromeOsHardware" />
    <uses-permission android:name="android.permission.RECORD_AUDIO" />

    <queries>
        <intent>
            <action android:name="android.intent.action.SEND" />

            <data android:mimeType="*/*" />
        </intent>
    </queries>

    <application
        android:name=".BaseApplication"
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.JetPack_MultipleNavigation"
        android:usesCleartextTraffic="true"
        tools:targetApi="31">
        <activity
            android:name=".recyclerViewPayloads.presentation.RecyclerActivity"
            android:noHistory="true"
            android:exported="false" />
        <activity
            android:name=".fragments.presentation.FragmentsActivity"
            android:exported="false" />
        <activity
            android:name=".pickSaveImage.presentation.BitmapActivity"
            android:exported="false"
            android:noHistory="true" />
        <activity
            android:name=".gamePack.presentation.GameActivity"
            android:configChanges="uiMode"
            android:exported="false"
            android:screenOrientation="landscape"
            android:windowSoftInputMode="adjustResize|stateAlwaysHidden"
            tools:ignore="DiscouragedApi" />
        <activity
            android:name=".splashScreen.presentation.SplashActivity"
            android:exported="true"
            android:noHistory="true"
            android:screenOrientation="fullSensor"
            tools:ignore="DiscouragedApi">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name=".MainActivity"
            android:configChanges="uiMode"
            android:exported="true"
            android:label="@string/app_name"
            android:launchMode="singleInstance"
            android:screenOrientation="portrait"
            android:theme="@style/Theme.JetPack_MultipleNavigation"
            android:windowSoftInputMode="adjustPan"
            tools:ignore="DiscouragedApi,LockedOrientationActivity,RedundantLabel">
            <intent-filter>
                <action android:name="android.intent.action.SEND" />

                <category android:name="android.intent.category.DEFAULT" />

                <data android:mimeType="image/*" />
            </intent-filter>
        </activity>

        <service android:name=".bindedServiceTimer.TimerService" />
        <service
            android:name=".chat.service.ChatFcmService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <receiver
            android:name=".downloadManager.DownloadCompletedReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.DOWNLOAD_COMPLETE" />
            </intent-filter>
        </receiver>
    </application>

</manifest>